CRITICAL
Fix Robot python

PRIORITY
build in some error checking
    what does michael's code do? just checking if you have enough reagent? I can proabaly
    run and try/except at the end

    check to make sure you don't end up with two reagents in same container
    check also that the user never specified an undefined deck position
    check also that the mass always provided. Just throw a lot of assertions at the sheet loading
    Check that stock solutions exist by the time you call them

    THROW ERRORS WITHIN CONTAINERS
    platereader should have 200 ul. Check at each scan]
    make sure you have enough to run reaction

FUTURE
Use logger to log messages
Error Exits
    implement server side error handle
    implement client side error handle
Update UML diagram and review protected vars/funcs
Block_On_Ready should probably be part of Armchair

NOTES
We've mostly fixed the tube problem, but for ML, where you really just want a container 
  (any container) to accomodate volume, we'll probabaly need to revisit
  this. I recommend
  a new class LabwareType that has a list of labware objects and finds the best one

DISCUSSION POINTS
We have the capacity to not pickup new tip on each transfer if same reagent if you wish
Would love a picture of each labware type
